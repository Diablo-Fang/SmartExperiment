<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dkd.manage.mapper.TeacherMapper">
    
    <resultMap type="Teacher" id="TeacherResult">
        <result property="id"    column="id"    />
        <result property="teacherCode"    column="teacher_code"    />
        <result property="name"    column="name"    />
        <result property="createdTime"    column="created_time"    />
    </resultMap>

    <resultMap id="TeacherStudentResult" type="Teacher" extends="TeacherResult">
        <collection property="studentList" notNullColumn="sub_id" javaType="java.util.List" resultMap="StudentResult" />
    </resultMap>

    <resultMap type="Student" id="StudentResult">
        <result property="id"    column="sub_id"    />
        <result property="studentCode"    column="sub_student_code"    />
        <result property="studentName"    column="sub_student_name"    />
        <result property="teacherId"    column="sub_teacher_id"    />
        <result property="experimentAppointmentTime"    column="sub_experiment_appointment_time"    />
        <result property="createTime"    column="sub_create_time"    />
        <result property="remark"    column="sub_remark"    />
    </resultMap>

    <sql id="selectTeacherVo">
        select id, teacher_code, name, created_time from tb_teacher
    </sql>

    <select id="selectTeacherList" parameterType="Teacher" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        <where>  
            <if test="teacherCode != null "> and teacher_code = #{teacherCode}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
        </where>
    </select>
    
    <select id="selectTeacherById" parameterType="Long" resultMap="TeacherStudentResult">
        select a.id, a.teacher_code, a.name, a.created_time,
 b.id as sub_id, b.student_code as sub_student_code, b.student_name as sub_student_name, b.teacher_id as sub_teacher_id, b.experiment_appointment_time as sub_experiment_appointment_time, b.create_time as sub_create_time, b.remark as sub_remark
        from tb_teacher a
        left join tb_student b on b.teacher_id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertTeacher" parameterType="Teacher" useGeneratedKeys="true" keyProperty="id">
        insert into tb_teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherCode != null">teacher_code,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="createdTime != null">created_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherCode != null">#{teacherCode},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="createdTime != null">#{createdTime},</if>
         </trim>
    </insert>

    <update id="updateTeacher" parameterType="Teacher">
        update tb_teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="teacherCode != null">teacher_code = #{teacherCode},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="createdTime != null">created_time = #{createdTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTeacherById" parameterType="Long">
        delete from tb_teacher where id = #{id}
    </delete>

    <delete id="deleteTeacherByIds" parameterType="String">
        delete from tb_teacher where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteStudentByTeacherIds" parameterType="String">
        delete from tb_student where teacher_id in 
        <foreach item="teacherId" collection="array" open="(" separator="," close=")">
            #{teacherId}
        </foreach>
    </delete>

    <delete id="deleteStudentByTeacherId" parameterType="Long">
        delete from tb_student where teacher_id = #{teacherId}
    </delete>

    <insert id="batchStudent">
        insert into tb_student( id, student_code, student_name, teacher_id, experiment_appointment_time, create_time, remark) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.studentCode}, #{item.studentName}, #{item.teacherId}, #{item.experimentAppointmentTime}, #{item.createTime}, #{item.remark})
        </foreach>
    </insert>
</mapper>